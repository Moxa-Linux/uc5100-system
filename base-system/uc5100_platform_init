#!/bin/bash
#
# Copyright (C) 2017 MOXA Inc. - https://www.moxa.com/
#
# Author: Elvis Yao <ElvisCW.Yao@moxa.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#

rfs_resize () {
	expand2fs
	mv /sbin/expand2fs /sbin/expand2fs.bak
	sync
	/sbin/reboot -d -f -i
}

init_network_config() {
	local num_of_eth="${1}"
	echo "# interfaces(5) file used by ifup(8) and ifdown(8)"
	echo "# Include files from /etc/network/interfaces.d:"
	echo "source-directory /etc/network/interfaces.d"
	echo -n "auto"

	for (( i=0 ; i<${num_of_eth}; i++ ))
	do
		echo -n " eth${i}"
	done

	echo " lo"
	echo "iface lo inet loopback"

	for (( i=0 ; i<${num_of_eth}; i++ ))
	do
		echo "iface eth${i} inet static"
		echo "        address 192.168.$((${i} + 3)).127"
		echo "        network 192.168.$((${i} + 3)).0"
		echo "        netmask 255.255.255.0"
		echo "        broadcast 192.168.$((${i} + 3)).255"
	done
}

init_gpio () {
	local gpio=${1}
	local direction=${2}
	local value=${3}

	if [ ! -f "/sys/class/gpio/gpio${gpio}" ]; then
		echo ${gpio} > "/sys/class/gpio/export"
		echo ${direction} > "/sys/class/gpio/gpio${gpio}/direction"
		if [ X"${direction}" == X"out" ]; then
			echo ${value} > "/sys/class/gpio/gpio${gpio}/value"
		fi
	fi
}

init_model_gpio () {
	# DI/DO
	init_gpio "54" "out" "0"
	init_gpio "55" "out" "0"
	init_gpio "56" "out" "0"
	init_gpio "57" "out" "0"
	init_gpio "86" "in"
	init_gpio "87" "in"
	init_gpio "88" "in"
	init_gpio "89" "in"

	# init mPCIe (uboot default to power on)
	# init_gpio "481" "out" "1"

	# celluar sim pin
	init_gpio "480" "out" "1"
}

set_configs() {
	local model_name=${1}

	ln -sf /etc/moxa-configs/${model_name}/* /etc/moxa-configs/

	systemctl disable moxa-cellular-signald.service
	systemctl disable moxa-cellular-utils.service
	systemctl disable moxa-wifi-signald.service

	# fix the issue that mount storage fuse-related filesystem via udev might be failed
	cp -a /lib/systemd/system/systemd-udevd.service /etc/systemd/system/
	sed -i 's/MountFlags=slave/MountFlags=shared/' /etc/systemd/system/systemd-udevd.service

	depmod "4.4.0-cip-uc5100+"

	# add wheel group for wifi_mgmt
	case ${model_name} in
		UC-5112-LX|UC-5102-LX)
			init_network_config 2 > /etc/network/interfaces
			groupadd wheel
			;;
		UC-5111-LX|UC-5101-LX)
			init_network_config 2 > /etc/network/interfaces
			;;
		*)
			echo "unknown model name."
			;;
	esac

	# increase vm minimum free size to avoid memory issue when copying lots of files.
	if ! grep "vm.min_free_kbytes" /etc/sysctl.conf > /dev/null; then
		echo "vm.min_free_kbytes=16384" >> /etc/sysctl.conf
	fi
}

init_uart_mode() {
	local num_of_node=${1}
	local i=""

	for ((i=0; i<${num_of_node}; i++))
	do
		mx-uart-ctl -f /dev/ttyM${i} -m 0
	done
}

initial_wifi () {
	if dmesg | grep "idProduct=9378" > /dev/null; then
		systemctl start moxa-wifi-signald.service	
	fi
}

initial_cellular() {
	if dmesg | grep -E "idProduct=68c0|idProduct=15c1|idProduct=005b" > /dev/null; then
		systemctl start moxa-cellular-signald.service
		systemctl start moxa-cellular-utils.service
        fi
}

initial_can () {
	#modprobe c_can_platform
	ip link set can0 up type can bitrate 125000 triple-sampling on
	ip link set can1 up type can bitrate 125000 triple-sampling on
}

uc5100_initial() {
	local model_name=$(kversion | awk '{print $1}')	

	# only needs to initial one time
	if [ -f /sbin/expand2fs ]; then	
		set_configs ${model_name}
		rfs_resize
	fi

	# initial by model
	case ${model_name} in
		UC-5101-LX)
			;;
		UC-5102-LX)
			initial_wifi
			initial_cellular
			;;
		UC-5111-LX)
			initial_can
			;;
		UC-5112-LX)
			initial_can
			initial_wifi
			initial_cellular
			;;
		*)
			echo "unknown model name."
			;;
	esac

	# general initial
	init_model_gpio
	init_uart_mode 4
	mx-led-ctl -p 1 -i 1 on
}

umount_rfs() {
	umount -f -l /tmp
	umount -f -l /media
	umount -f -l /home
	umount -f -l /usr
	umount -f -l /lib
	umount -f -l /bin
	umount -f -l /sbin
	umount -f -l /etc
	umount -f -l /var
	umount -f -l /root
	umount -f -l /overlayfs
}

uc5100_stop() {
	local model_name=$(kversion | awk '{print $1}')	

	# stop by model
	case ${model_name} in
		UC-5101-LX|UC-5111-LX)
			echo "Do nothing"
			;;
		UC-5112-LX|UC-5102-LX)
			wifi_mgmt stop
			cell_mgmt stop
			mx-mod-ctl -p off 1
			;;
		*)
			echo "unknown model name."
			;;
	esac

	# general stop	
	umount_rfs
}

case "$1" in
    start)
	uc5100_initial
        ;;
    restart|reload|force-reload)
        echo "Error: argument '$1' not supported" >&2
        exit 3
        ;;
    stop)
	uc5100_stop
        ;;
    *)
        echo "Usage: $0 start|stop" >&2
        exit 3
        ;;
esac

