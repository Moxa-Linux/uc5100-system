#!/bin/bash
#
# SPDX-License-Identifier: Apache-2.0
#
# Authors:
#       2018    Elvis Yao <ElvisCW.Yao@moxa.com>
#       2018    Ken CJ Chou <KenCJ.Chou@moxa.com>
#

rfs_resize () {
	expand2fs
	mv /sbin/expand2fs /sbin/expand2fs.bak
	sync
	/sbin/reboot -d -f -i
}

init_gpio () {
	local gpio=${1}
	local direction=${2}
	local value=${3}

	if [ ! -e "/sys/class/gpio/gpio${gpio}" ]; then
		echo ${gpio} > "/sys/class/gpio/export"
		echo ${direction} > "/sys/class/gpio/gpio${gpio}/direction"
	fi
	if [ X"${direction}" == X"out" ]; then
		echo ${value} > "/sys/class/gpio/gpio${gpio}/value"
	fi
}

init_network_config() {
	local num_of_eth="${1}"

	echo "# interfaces(5) file used by ifup(8) and ifdown(8)"
	echo "# Include files from /etc/network/interfaces.d:"
	echo "source-directory /etc/network/interfaces.d"
	echo -n "auto"

	for (( i=0 ; i<${num_of_eth}; i++ ))
	do
		echo -n " eth${i}"
	done
	echo " lo"
	echo "iface lo inet loopback"

	for (( i=0 ; i<${num_of_eth}; i++ ))
	do
		echo "iface eth${i} inet static"
		echo "        address 192.168.$((${i} + 3)).127"
		echo "        network 192.168.$((${i} + 3)).0"
		echo "        netmask 255.255.255.0"
		echo "        broadcast 192.168.$((${i} + 3)).255"
	done
}

get_model_name() {
	local model_name=$(kversion | awk '{print $1}')

	case ${model_name} in
	UC-5101-LX|UC-5101-T-LX)
		model_name="UC-5101-LX"
		;;
	UC-5102-LX|UC-5102-T-LX)
		model_name="UC-5102-LX"
		;;
	UC-5111-LX|UC-5111-T-LX)
		model_name="UC-5111-LX"
		;;
	UC-5112-LX|UC-5112-T-LX)
		model_name="UC-5112-LX"
		;;
	esac

	echo ${model_name}
}

one_time_setting() {
	local model_name=${1}

	systemctl disable moxa-cellular-signald.service
	systemctl disable moxa-cellular-utils.service
	systemctl disable moxa-wifi-signald.service

	# fix the issue that mount storage fuse-related filesystem via udev might be failed
	cp -a /lib/systemd/system/systemd-udevd.service /etc/systemd/system/
	sed -i 's/MountFlags=slave/MountFlags=shared/' /etc/systemd/system/systemd-udevd.service

	depmod -a

	case ${model_name} in
	UC-5112-LX|UC-5102-LX)
		init_network_config 2 > /etc/network/interfaces
		groupadd wheel
		;;
	esac

	init_network_config 2 > /etc/network/interfaces

	# Enable bootloader to pass the fsck.repair parameter to kernel
	fw_setenv robust 1

	# fix kernel 4.4 swap memory issue.
	if ! grep "vm.min_free_kbytes" /etc/sysctl.conf > /dev/null; then
                echo "vm.min_free_kbytes=16384" >> /etc/sysctl.conf
        fi
}

initial_dio() {
	init_gpio "54" "out" "0"
	init_gpio "55" "out" "0"
	init_gpio "56" "out" "0"
	init_gpio "57" "out" "0"
	init_gpio "86" "in"
	init_gpio "87" "in"
	init_gpio "88" "in"
	init_gpio "89" "in"
}

initial_wifi () {
	if dmesg | grep "idProduct=9378" > /dev/null; then
		systemctl start moxa-wifi-signald.service	
	fi
}

initial_cellular() {
	# set first sim card slot by default
	init_gpio "480" "out" "1"

	if dmesg | grep -E "idProduct=68c0|idProduct=15c1|idProduct=005b" > /dev/null; then
		systemctl start moxa-cellular-signald.service
		systemctl start moxa-cellular-utils.service
        fi
}

initial_can () {
	ip link set can0 up type can bitrate 125000
	ip link set can1 up type can bitrate 125000
}

uc5100_initial() {
	local model_name=$(get_model_name)

	ln -sf /etc/moxa-configs/${model_name}/configs/* /etc/moxa-configs/
	ln -sf /etc/moxa-configs/${model_name}/udev/* /etc/udev/rules.d/

	# only needs to initial one time
	if [ -f /sbin/expand2fs ]; then	
		one_time_setting ${model_name}
		rfs_resize
	fi

	# initial by model
	case ${model_name} in
	UC-5101-LX)
		;;
	UC-5102-LX)
		initial_wifi
		initial_cellular
		;;
	UC-5111-LX)
		initial_can
		;;
	UC-5112-LX)
		initial_can
		initial_wifi
		initial_cellular
		;;
	*)
		echo "Error: Unknown model name" >&2
		;;
	esac

	# general initial
	initial_dio

	# light up system ready led
	mx-led-ctl -p 1 -i 1 on
}

umount_rfs() {
	umount -f -l /tmp
        umount -f -l /home
        umount -f -l /media
        umount -f -l /mnt
        umount -f -l /etc
        umount -f -l /root
        umount -f -l /opt
        umount -f -l /usr
        umount -f -l /bin
        umount -f -l /sbin
        umount -f -l /var
        umount -f -l /lib
        umount -f -l /overlayfs
}

uc5100_stop() {
	local model_name=$(get_model_name)

	case ${model_name} in
	UC-5101-LX|UC-5111-LX)
		;;
	UC-5102-LX|UC-5112-LX)
		cell_mgmt stop
		wifi_mgmt stop
		if lsmod | grep "^wlan" -q; then
			rmmod wlan
		fi
		mx-mod-ctl -p off 1
		;;
	*)
		echo "Error: Unknown model name" >&2
		;;
	esac

	# general stop	
	umount_rfs
}

case "$1" in
start)
	uc5100_initial
	;;
restart|reload|force-reload)
	echo "Error: argument '$1' not supported" >&2
	exit 3
	;;
stop)
	uc5100_stop
	;;
*)
	echo "Usage: $0 start|stop" >&2
	exit 3
	;;
esac

